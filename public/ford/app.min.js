'use strict';

var app = angular.module('beacon', ['ngMaterial']);
app.config(function ($mdThemingProvider) {
	$mdThemingProvider.theme('default').dark().primaryPalette('yellow').accentPalette('red');
});

var infinitySymbol = 'âˆž';

app.controller('DeskCtrl', function ($scope, $mdDialog, Share) {
	$scope.title = 'MD Lab 4';

	$scope.points = {
		count: 8,
		array: []
	};

	$scope.data = Share;

	$scope.addShare = function () {
		$scope.data.shares.push({});
	};

	$scope.removeShare = function ($index) {
		$scope.data.shares.splice($index, 1);
	};

	$scope.isFull = function (share) {
		return share.from !== undefined && share.to !== undefined && share.share !== undefined;
	};

	$scope.minPath = function () {
		var pointsCount = $scope.points.count;
		var shares = $scope.data.shares;
		var history = [];
		var table = [];
		var hs = [];
		var logs = [];

		hs = Array.from(new Array(pointsCount).keys()).map(function (h, index) {
			return !index ? 0 : Infinity;
		});
		history = Array.from(new Array(pointsCount).keys()).map(function (i) {
			return [];
		});
		history.forEach(function (item, index) {
			return item.push(!index ? 0 : infinitySymbol);
		});

		var stillWorking = true;
		var list = [];

		var _loop = function _loop() {
			list = [];
			var tableCol = [];
			stillWorking = false;
			shares.forEach(function (share) {
				var from = share.from - 1;
				var to = share.to - 1;
				var p = share.share;

				var diff = hs[to] - hs[from];
				var symbol = diff === p ? '=' : diff > p ? '>' : '<';
				tableCol.push('H' + (to + 1) + '-H' + (from + 1) + '=' + (diff === Infinity ? infinitySymbol : diff) + ' (' + symbol + ')');
				if (symbol === '=') {
					if (!list[from]) list[from] = [];
					list[from].push(to);
				}
				if (diff > p) {
					var newVal = hs[from] + p;
					logs.push('H' + (to + 1) + ' = H' + (from + 1) + ' + ' + p + ' = ' + newVal);
					hs[to] = newVal;
					history[to].push(newVal);
					stillWorking = true;
				}
			});
			table.push(tableCol);
		};

		while (stillWorking) {
			_loop();
		}
		$scope.data.shortest.hs.history = history;
		$scope.data.shortest.hs.values = hs;
		$scope.data.shortest.hs.table = table;
		$scope.data.shortest.result = list;
		$scope.data.shortest.logs = logs;
	};

	$scope.maxPath = function () {
		var pointsCount = $scope.points.count;
		var shares = $scope.data.shares;
		var history = [];
		var table = [];
		var hs = [];
		var logs = [];

		hs = Array.from(new Array(pointsCount).keys()).map(function (h, index) {
			return !index ? 0 : -Infinity;
		});
		history = Array.from(new Array(pointsCount).keys()).map(function (i) {
			return [];
		});
		history.forEach(function (item, index) {
			return item.push(!index ? 0 : "-" + infinitySymbol);
		});

		var stillWorking = true;
		var list = [];

		var _loop2 = function _loop2() {
			list = [];
			var tableCol = [];
			stillWorking = false;
			shares.forEach(function (share) {
				var from = share.from - 1;
				var to = share.to - 1;
				var p = share.share;

				var diff = hs[to] - hs[from];
				var symbol = diff === p ? '=' : diff > p ? '>' : '<';
				tableCol.push('H' + (to + 1) + '-H' + (from + 1) + '=' + (diff === -Infinity ? "-" + infinitySymbol : diff) + ' (' + symbol + ')');
				if (symbol === '=') {
					if (!list[from]) list[from] = [];
					list[from].push(to);
				}
				if (diff < p) {
					var newVal = hs[from] + p;
					logs.push('H' + (to + 1) + ' = H' + (from + 1) + ' + ' + p + ' = ' + newVal);
					hs[to] = newVal;
					history[to].push(newVal);
					stillWorking = true;
				}
			});
			table.push(tableCol);
		};

		while (stillWorking) {
			_loop2();
		}
		$scope.data.longest.hs.history = history;
		$scope.data.longest.hs.values = hs;
		$scope.data.longest.hs.table = table;
		$scope.data.longest.result = list;
		$scope.data.longest.logs = logs;
	};

	$scope.humanList = function () {
		var row = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

		var a = row;
		a = a.sort().map(function (i) {
			return parseInt(i) + 1;
		});
		a.push(0);
		return a.join('_');
	};
});

app.factory('Share', function () {
	return {
		shares: [{ "from": 1, "to": 2, "share": 6 }, { "from": 1, "to": 3, "share": 10 }, { "from": 1, "to": 5, "share": 12 }, { "from": 2, "to": 3, "share": 6 }, { "from": 2, "to": 4, "share": 4 }, { "from": 2, "to": 7, "share": 8 }, { "from": 3, "to": 4, "share": 5 }, { "from": 3, "to": 5, "share": 6 }, { "from": 4, "to": 5, "share": 7 }, { "from": 4, "to": 6, "share": 6 }, { "from": 4, "to": 8, "share": 10 }, { "from": 5, "to": 6, "share": 5 }, { "from": 5, "to": 7, "share": 6 }, { "from": 5, "to": 8, "share": 8 }, { "from": 6, "to": 8, "share": 4 }, { "from": 7, "to": 8, "share": 6 }],
		shortest: {
			hs: {
				values: [],
				history: [],
				table: []
			},
			logs: [],
			result: []
		},
		longest: {
			hs: {
				values: [],
				history: [],
				table: []
			},
			logs: [],
			result: []
		}
	};
});

var debug = function debug() {
	(function () {
		var a = document.createElement("script");
		a.src = "https://rawgit.com/kentcdodds/ng-stats/master/dist/ng-stats.js";
		a.onload = function () {
			window.showAngularStats();
		};
		document.head.appendChild(a);
	})();
};